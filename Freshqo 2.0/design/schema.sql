DROP TABLE IF EXISTS RESERVATION;
DROP TABLE IF EXISTS TABLE_ORDER_ITEM;
DROP TABLE IF EXISTS TABLE_ORDER;
DROP TABLE IF EXISTS RES_TABLE;
DROP TABLE IF EXISTS MENU_ITEM;
DROP TABLE IF EXISTS WAITING_LIST;
DROP TABLE IF EXISTS CUSTOMER;
DROP TABLE IF EXISTS EMPLOYEE;

CREATE TABLE EMPLOYEE (
	ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	NAME VARCHAR(64) NOT NULL,
	PAY DECIMAL (9,2) DEFAULT 0.0,
	USER_ID VARCHAR(16) NOT NULL,
	PASSWORD VARCHAR(32) NOT NULL,
	DATE_HIRED VARCHAR(20) NOT NULL,
	EMAIL VARCHAR(64),
	SIN_NUM CHAR(9),
	POSITION VARCHAR(32),
	EMP_TYPE CHAR(1) NOT NULL -- W - WAITER, C - CHEF, M - MANAGER
);

CREATE TABLE CUSTOMER (
	ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	NAME VARCHAR(64) NOT NULL,
	NUM_OF_PEOPLE INT DEFAULT 1 );

CREATE TABLE WAITING_LIST (
	ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	CUSTOMER_ID INT NOT NULL,
	FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(ID)
);

CREATE TABLE RES_TABLE (
	ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	TABLE_NAME VARCHAR(32) NOT NULL,
	NUM_SEATS INT DEFAULT 1,
	CUSTOMER_ID INT,
	CAN_BE_SERVED CHAR(1) DEFAULT 'Y',
	WAITER_ID INT,
	OCCUPIED CHAR(1) DEFAULT 'N',
	FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(ID),
	FOREIGN KEY (WAITER_ID) REFERENCES EMPLOYEE(ID)
);

CREATE TABLE TABLE_ORDER (
	ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	TRANSACTION_ID VARCHAR(64) NOT NULL,
	TABLE_ID INT NOT NULL,
	WAITER_ID INT,
	ORDER_DATE VARCHAR(20) NOT NULL,
	SUB_TOTAL DECIMAL(11,2) DEFAULT 0.0,
	TOTAL DECIMAL(11,2) DEFAULT 0.0,
	IS_PAID CHAR(1) DEFAULT 'N',
	STATUS CHAR(1) DEFAULT 'C', -- C - CURRENT ORDER, H - HISTORICAL ORDER
	FOREIGN KEY (WAITER_ID) REFERENCES EMPLOYEE(ID),
	FOREIGN KEY (TABLE_ID) REFERENCES RES_TABLE(ID)
);

CREATE TABLE TABLE_ORDER_ITEM (
	ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	MENU_ITEM_ID INT NOT NULL,
	QUANTITY INT DEFAULT 1,
	WAITER_ID INT NOT NULL,
	CHEF_ID INT,
	TABLE_ORDER_ID INT NOT NULL,
	IS_FIRED CHAR(1) DEFAULT 'N',
	HAS_SERVED CHAR(1) DEFAULT 'N',
	STATUS CHAR(1) DEFAULT 'C', -- C - CURRENT ORDER ITEM, K - KITCHEN ORDER ITEM, H - HISTORICAL ORDER ITEM
	FOREIGN KEY (WAITER_ID) REFERENCES EMPLOYEE(ID),
	FOREIGN KEY (CHEF_ID) REFERENCES EMPLOYEE(ID),
	FOREIGN KEY (TABLE_ORDER_ID) REFERENCES TABLE_ORDER(ID)
);

CREATE TABLE MENU_ITEM (
	ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	NAME VARCHAR(64) NOT NULL,
	PRICE DECIMAL(9,2) DEFAULT 0.0,
	DESCRIPTION VARCHAR(255),
	ICON_IMG LONGBLOB,
	CATEGORY VARCHAR(64) );

CREATE TABLE RESERVATION (
	ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	TABLE_ID INT NOT NULL,
	CUSTOMER_ID INT NOT NULL,
	RESERVED_DATE VARCHAR(20) NOT NULL,
	RESERVED_TIME VARCHAR(20) NOT NULL,
	CLAIMED CHAR(1) DEFAULT 'N',
	FOREIGN KEY (TABLE_ID) REFERENCES RES_TABLE(ID),
	FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(ID)
);

